name: Windows Test

# Lanzar este Workflow cuando se haga un push al repositorio:
on: [push]

jobs:
  build:
    # Los test se realizarán en windows:
    runs-on: windows-latest
    # Se probará con 3 versiones de Python en paralelo:
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.5, 3.6, 3.7]

    steps:
      # "Importamos" la action checkout, que nos permite clonar nuestro
      # repositorio para iniciar los test
      - uses: actions/checkout@v1
      # Configurar la versión de Python correspondiente:
      - name: Set up Python ${{ matrix.python-version }}
      # Para eso importamos otra action predefinida:
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      # Instalar las depedencias necesarias para los test:
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make install
      # De momento, los servicios de GitHub Actions no incorporan MongoDB, por lo que
      # para utilizarlo en los test, emplearemos un contenedor docker:
      - name: Set Up Mongo
        run: |
          docker run --name mongo -d -p 27017:27017 mongo
          docker exec mongo mongo EventsDB --eval 'db.createCollection("events");'
      # Ejecutar los test:
      - name: Test
        run: |
          make test
        env:
          DB_URI: ${{ secrets.DB_URI }}